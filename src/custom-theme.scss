@import "~@angular/material/theming";

@include mat-core();

// custom background and foreground palettes
$my-custom-theme-background: (
  status-bar: #821210,
  app-bar: map_get($mat-blue, 900),
  background: #821210,
  hover: rgba(#821210, 0.04),
  card: map_get($mat-red, 800),
  dialog: #821210,
  disabled-button:#821210,
  raised-button: #821210,
  focused-button: #821210,
  selected-button: #821210,
  selected-disabled-button: #821210,
  disabled-button-toggle: #821210,
  unselected-chip: #821210,
  disabled-list-option: #821210
);

$my-custom-theme-foreground: (
  base: #821210,
  divider: #821210,
  dividers: #821210,
  disabled: rgba(#821210, 0.3),
  disabled-button: rgba(#821210, 0.3),
  disabled-text: rgba(#821210, 0.3),
  hint-text: rgba(#821210, 0.3),
  secondary-text: rgba(#821210, 0.7),
  icon: #821210,
  icons: #821210,
  text: #821210,
  slider-min: white,
  slider-off: rgba(#821210, 0.3),
  slider-off-active: rgba(#821210, 0.3)
);

// instead of creating a theme with mat-light-theme like a sane person, we will create our own theme-creating function that lets us apply our own foreground and background palettes.
@function create-wonky-theme($primary, $accent, $warn: mat-palette($mat-red)) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $my-custom-theme-foreground,
    background: $my-custom-theme-background
  );
}

// The rest of this is like a normal theme.scss file. The only difference being that we use create-wonky-theme instead of mat-light-theme
$custom-theme-primary: mat-palette($mat-custom-red-color);
$custom-theme-accent: mat-palette($mat-custom-gold-color);
$custom-theme-warn: mat-palette($mat-red);

$custom-theme: create-wonky-theme(
  $custom-theme-primary,
  $custom-theme-accent,
  $custom-theme-warn
);

@include angular-material-theme($custom-theme);
